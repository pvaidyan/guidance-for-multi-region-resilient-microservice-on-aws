name: Dependency Vulnerability Scan

on:
  schedule:
    - cron: '0 0 * * 0'  # Run weekly at midnight on Sunday
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  java-vulnerability-scan:
    name: Java Dependency Scan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [cart, orders, ui]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Run OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@2.9.0
        with:
          project: '${{ matrix.service }}'
          path: './source/${{ matrix.service }}'
          format: 'HTML'
          out: './reports/${{ matrix.service }}'
          args: >
            --enableExperimental
            --scan ./source/${{ matrix.service }}

      - name: Upload Dependency Check Report
        uses: actions/upload-artifact@v3
        with:
          name: dependency-check-report-${{ matrix.service }}
          path: ./reports/${{ matrix.service }}
          retention-days: 7

      - name: Run Trivy vulnerability scanner for Java
        uses: aquasecurity/trivy-action@0.16.1
        with:
          scan-type: 'fs'
          scan-ref: './source/${{ matrix.service }}'
          format: 'sarif'
          output: 'trivy-results-${{ matrix.service }}.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results-${{ matrix.service }}.sarif'
          category: 'trivy-${{ matrix.service }}'

  node-vulnerability-scan:
    name: Node.js Dependency Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './source/checkout/package-lock.json'

      - name: Install dependencies
        run: cd ./source/checkout && npm ci

      - name: Run npm audit
        run: cd ./source/checkout && npm audit --json > npm-audit-report.json || true

      - name: Upload npm audit report
        uses: actions/upload-artifact@v3
        with:
          name: npm-audit-report
          path: ./source/checkout/npm-audit-report.json
          retention-days: 7

      - name: Run Trivy vulnerability scanner for Node.js
        uses: aquasecurity/trivy-action@0.16.1
        with:
          scan-type: 'fs'
          scan-ref: './source/checkout'
          format: 'sarif'
          output: 'trivy-results-checkout.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results-checkout.sarif'
          category: 'trivy-checkout'

  go-vulnerability-scan:
    name: Go Dependency Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
          cache: true
          cache-dependency-path: './source/catalog/go.sum'

      - name: Run govulncheck
        uses: golang/govulncheck-action@v1
        with:
          go-version-input: '1.20'
          go-package: './source/catalog/...'
          working-directory: './source/catalog'

      - name: Run Trivy vulnerability scanner for Go
        uses: aquasecurity/trivy-action@0.16.1
        with:
          scan-type: 'fs'
          scan-ref: './source/catalog'
          format: 'sarif'
          output: 'trivy-results-catalog.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results-catalog.sarif'
          category: 'trivy-catalog'

  generate-summary-report:
    name: Generate Summary Report
    needs: [java-vulnerability-scan, node-vulnerability-scan, go-vulnerability-scan]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./vulnerability-reports

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Generate consolidated report
        run: |
          mkdir -p ./consolidated-report
          echo "# Dependency Vulnerability Scan Report" > ./consolidated-report/summary.md
          echo "## Generated on $(date)" >> ./consolidated-report/summary.md
          echo "" >> ./consolidated-report/summary.md
          
          # Process Java reports
          echo "## Java Services" >> ./consolidated-report/summary.md
          for service in cart orders ui; do
            echo "### $service Service" >> ./consolidated-report/summary.md
            if [ -d "./vulnerability-reports/dependency-check-report-$service" ]; then
              echo "- [Detailed OWASP Dependency Check Report](./dependency-check-report-$service/dependency-check-report.html)" >> ./consolidated-report/summary.md
            else
              echo "- OWASP Dependency Check Report not available" >> ./consolidated-report/summary.md
            fi
            echo "" >> ./consolidated-report/summary.md
          done
          
          # Process Node.js report
          echo "## Node.js Services" >> ./consolidated-report/summary.md
          echo "### checkout Service" >> ./consolidated-report/summary.md
          if [ -f "./vulnerability-reports/npm-audit-report/npm-audit-report.json" ]; then
            echo "- NPM Audit Report available" >> ./consolidated-report/summary.md
            # Extract summary information from npm audit report
            echo "\`\`\`" >> ./consolidated-report/summary.md
            cat ./vulnerability-reports/npm-audit-report/npm-audit-report.json | grep -A 10 "metadata" >> ./consolidated-report/summary.md
            echo "\`\`\`" >> ./consolidated-report/summary.md
          else
            echo "- NPM Audit Report not available" >> ./consolidated-report/summary.md
          fi
          echo "" >> ./consolidated-report/summary.md
          
          # Process Go report
          echo "## Go Services" >> ./consolidated-report/summary.md
          echo "### catalog Service" >> ./consolidated-report/summary.md
          echo "- Govulncheck scan completed" >> ./consolidated-report/summary.md
          echo "" >> ./consolidated-report/summary.md
          
          # Add Trivy summary
          echo "## Trivy Vulnerability Scans" >> ./consolidated-report/summary.md
          echo "Trivy scan results are available in the GitHub Security tab." >> ./consolidated-report/summary.md
          echo "" >> ./consolidated-report/summary.md
          
          # Add recommendations
          echo "## Recommendations" >> ./consolidated-report/summary.md
          echo "1. Review all Critical and High vulnerabilities immediately" >> ./consolidated-report/summary.md
          echo "2. Create issues for Medium vulnerabilities to be addressed in upcoming sprints" >> ./consolidated-report/summary.md
          echo "3. Update dependencies regularly to minimize security risks" >> ./consolidated-report/summary.md

      - name: Upload consolidated report
        uses: actions/upload-artifact@v3
        with:
          name: vulnerability-summary-report
          path: ./consolidated-report
          retention-days: 30

      - name: Create GitHub Pages deployment
        if: github.event_name != 'pull_request' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./consolidated-report
          destination_dir: vulnerability-reports
          enable_jekyll: true
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_message: 'Update vulnerability report'